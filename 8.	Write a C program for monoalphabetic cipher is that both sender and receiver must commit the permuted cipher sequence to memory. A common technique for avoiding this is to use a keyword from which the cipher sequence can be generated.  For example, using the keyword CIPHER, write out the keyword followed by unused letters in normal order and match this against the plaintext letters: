#include <stdio.h>
#include <string.h>
#include <ctype.h>
void generateCipherAlphabet(char keyword[], char cipherAlphabet[]);
void encryptMessage(char plainText[], char cipherAlphabet[], char cipherText[]);
int main() {
    char keyword[] = "CIPHER"; 
    char cipherAlphabet[26];
    char plainText[100], cipherText[100];  
    generateCipherAlphabet(keyword, cipherAlphabet);
    printf("Enter the plaintext (lowercase letters only): ");
    fgets(plainText, 100, stdin);
    plainText[strlen(plainText) - 1] = '\0'; 
    encryptMessage(plainText, cipherAlphabet, cipherText);
    printf("Ciphertext: %s\n", cipherText);
    return 0;
}
void generateCipherAlphabet(char keyword[], char cipherAlphabet[]) {
    int used[26] = {0}; 
    int index = 0;
    for (int i = 0; i < strlen(keyword); i++) {
        char letter = toupper(keyword[i]);
        if (!used[letter - 'A']) {
            cipherAlphabet[index++] = letter;
            used[letter - 'A'] = 1;
        }
    }
    for (char letter = 'A'; letter <= 'Z'; letter++) {
        if (!used[letter - 'A']) {
            cipherAlphabet[index++] = letter;
        }
    }
    printf("Generated Cipher Alphabet: ");
    for (int i = 0; i < 26; i++) {
        printf("%c ", cipherAlphabet[i]);
    }
    printf("\n");
}
void encryptMessage(char plainText[], char cipherAlphabet[], char cipherText[]) {
    for (int i = 0; i < strlen(plainText); i++) {
        char letter = plainText[i];

        if (letter >= 'a' && letter <= 'z') {
            int pos = letter - 'a';
            cipherText[i] = cipherAlphabet[pos];
        } else {
            cipherText[i] = letter;
        }
    }
    cipherText[strlen(plainText)] = '\0';  
}
