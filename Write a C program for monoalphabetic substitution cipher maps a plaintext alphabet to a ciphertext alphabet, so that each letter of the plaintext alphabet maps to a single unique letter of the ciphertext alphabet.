#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define ALPHABET_SIZE 26
void encryptMonoalphabetic(char *plaintext, char *key, char *ciphertext) {
    char substitution[ALPHABET_SIZE];
    char ch;
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        substitution[i] = key[i];
    }
    for (int i = 0; plaintext[i] != '\0'; ++i) {
        ch = plaintext[i];
        if (isupper(ch)) {
            ciphertext[i] = substitution[ch - 'A'];
        }
        else if (islower(ch)) {
            ciphertext[i] = tolower(substitution[ch - 'a']);
        } else {
            ciphertext[i] = ch;
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}
int main() {
    char plaintext[100], key[ALPHABET_SIZE + 1], ciphertext[100];
    printf("Enter a encrypt: ");
    fgets(plaintext, sizeof(plaintext), stdin);
        printf("Enter the key (26 unique characters): ");
    scanf("%s", key);
    if (strlen(key) != ALPHABET_SIZE) {
        printf("The substitution key must contain 26 unique characters.\n");
        return 1;
    }
    encryptMonoalphabetic(plaintext, key, ciphertext);
    printf("Encrypted message: %s", ciphertext);

    return 0;
}
